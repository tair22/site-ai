import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import speech_recognition as sr
from googletrans import Translator
import random
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ
duration = 5  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
sample_rate = 44100

# –°–ª–æ–≤–∞—Ä—å —Å —É—Ä–æ–≤–Ω—è–º–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
words_by_level = {
    "easy": {
        "–∫–æ—Ç": "cat",
        "—Å–æ–±–∞–∫–∞": "dog",
        "—è–±–ª–æ–∫–æ": "apple",
        "–º–æ–ª–æ–∫–æ": "milk",
        "—Å–æ–ª–Ω—Ü–µ": "sun"
    },
    "medium": {
        "–±–∞–Ω–∞–Ω": "banana",
        "—à–∫–æ–ª–∞": "school",
        "–¥—Ä—É–≥": "friend",
        "–æ–∫–Ω–æ": "window",
        "–∂—ë–ª—Ç—ã–π": "yellow"
    },
    "hard": {
        "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è": "technology",
        "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç": "university",
        "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": "information",
        "–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ": "pronunciation",
        "–≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ": "imagination"
    }
}

def translator():
    print("–í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –ø–µ—Ä–µ–≤–æ–¥–∞ –≥–æ–ª–æ—Å–æ–≤—É—Ö–∏...")
    time.sleep(5)
    import sounddevice as sd
    import numpy as np
    import scipy.io.wavfile as wav
    import speech_recognition as sr
    from googletrans import Translator
    import random

    duration = 5  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
    sample_rate = 44100

    print("–ì–æ–≤–æ—Ä–∏...")
    recording = sd.rec(
    int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
    samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
    channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
    dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
    sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏

    wav.write("output.wav", sample_rate, recording)
    print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")

    recognizer = sr.Recognizer()
    with sr.AudioFile("output.wav") as source:
        audio = recognizer.record(source)

    try:
        text = recognizer.recognize_google(audio, language="ru-RU")
        print("–¢—ã —Å–∫–∞–∑–∞–ª:", text)
    except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
        return None
    except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return None

    while True:
        b = input('–ù—É–∂–µ–Ω –ª–∏ –ø–µ—Ä–µ–≤–æ–¥? –¥–∞ –∏–ª–∏ –Ω–µ—Ç ')
        if b == "–¥–∞":    
            a = input("–ù–∞ –∫–∞–∫–æ–π —è–∑—ã–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏? en-–ê–Ω–≥–ª–∏–π—Å–∫–∏–π, es-–ò—Å–ø–∞–Ω—Å–∫–∏–π ru-–†—É—Å—Å–∫–∏–π,pt-–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π,id-–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π,pl-–ü–æ–ª—å—Å–∫–∏–π,it-–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π,tr-–¢—É—Ä–µ—Ü–∫–∏–π ")
            if a == 'en' or a == 'es' or a == 'ru' or a == 'pt' or a == 'id' or a == 'pl' or a == 'it' or a == 'tr':
                translator = Translator()
                translated = translator.translate(text, dest=a)  # –∑–¥–µ—Å—å 'en' ‚Äî —ç—Ç–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
            print("üåç –ü–µ—Ä–µ–≤–æ–¥:", translated.text)
        if b == "–Ω–µ—Ç":
            break
        print("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ")







def select_level():
    """–í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
    print("1 - –õ–µ–≥–∫–∏–πüü¢")
    print("2 - –°—Ä–µ–¥–Ω–∏–π‚≠ê")
    print("3 - –°–ª–æ–∂–Ω—ã–πüî¥")
    print("4 - –†–µ–∂–∏–º –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞üìÑ")

    while True:
        choice = input("–í–∞—à –≤—ã–±–æ—Ä (1-4): ")
        if choice in ["1", "2", "3"]:
            return ["easy", "medium", "hard"][int(choice)-1]
        elif choice == "4":
            return translator()
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1, 2, 3 –∏–ª–∏ 4")

def record_audio():
    """–ó–∞–ø–∏—Å—å –∞—É–¥–∏–æ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞"""
    print("\n–ì–æ–≤–æ—Ä–∏—Ç–µ —Å–µ–π—á–∞—Å...")
    recording = sd.rec(
        int(duration * sample_rate),
        samplerate=sample_rate,
        channels=1,
        dtype="int16"
    )
    sd.wait()
    wav.write("output.wav", sample_rate, recording)
    return "output.wav"

def recognize_speech(audio_file):
    """–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∏–∑ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞"""
    recognizer = sr.Recognizer()
    with sr.AudioFile(audio_file) as source:
        audio = recognizer.record(source)
    
    try:
        text = recognizer.recognize_google(audio, language="en-US")
        print(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")
        return text.lower()
    except sr.UnknownValueError:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
        return None
    except sr.RequestError as e:
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return None

def play_game():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª"""
    print("–ùello World!")
    print("/^-----^\ ")
    print("V  o o  V")
    print(" |  Y  |")
    print("  \ Q /")
    print("  / - \ ")
    print("  |    \ ")
    print("  |     \     )")
    print("  || (___\====")
    print("üé§ –ò–≥—Ä–∞: –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π üé§")
    print("–ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ –ø–æ–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä—É—Å—Å–∫–æ–≥–æ —Å–ª–æ–≤–∞")
    print("–î–ª—è –≤—ã—Ö–æ–¥–∞ —Å–∫–∞–∂–∏—Ç–µ 'quit'")
    
    level = select_level()
    words = words_by_level[level]
    score = 0
    total_attempts = 0
    
    while True:
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ
        russian_word, correct_translation = random.choice(list(words.items()))
        print(f"\n–°–ª–æ–≤–æ: {russian_word}")
        
        # –ó–∞–ø–∏—Å—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
        audio_file = record_audio()
        user_translation = recognize_speech(audio_file)
        
        if user_translation == "quit":
            break
            
        total_attempts += 1
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
        if user_translation == correct_translation:
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            score += 1
            cont = input("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?–ø–∏—à–∏ –¥–∞ –∏–ª–∏ –Ω–µ—Ç  ")
            if cont == "–¥–∞":
                continue
            elif cont == "–Ω–µ—Ç":
                break
        elif user_translation:
            print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_translation}")
            cont = input("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?–ø–∏—à–∏ –¥–∞ –∏–ª–∏ –Ω–µ—Ç")
            if cont == "–¥–∞":
                continue
            elif cont == "–Ω–µ—Ç":
                break
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"–í–∞—à —Å—á–µ—Ç: {score}/{total_attempts}")
        
        # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–ª–æ–≤–æ–º
        time.sleep(1)
    
    print("\n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!")
    if total_attempts > 0:
        accuracy = (score / total_attempts) * 100
        print(f"–ò—Ç–æ–≥–æ–≤–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: {accuracy:.1f}%")
        if accuracy < 60:
            print("Game over! –í–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∏–∂–µ 60!")
        else:
            print("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!")    
            print("‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚îÄ‚îÄ‚îÄ")   
            print("‚îÄ‚îÄ‚îÄ‚ñà‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñà‚îÄ‚îÄ‚îÄ") 
            print("‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà‚îÄ‚îÄ‚îÄ‚îÄ")    
            print("‚îÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚ñà‚ñë‚ñë‚ñë‚ñÄ‚ñà‚ñÄ‚ñë‚ñë‚ñë‚ñà‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ")   
            print("‚ñà‚ñë‚ñë‚ñà‚îÄ‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚îÄ‚ñà‚ñë‚ñë‚ñà")    


if __name__ == "__main__":
    play_game()